/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI_QuanLy;

import BUS.*;
import DTO.*;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;


public class GUI_ContainerPhone extends javax.swing.JPanel {

    /**
     * Creates new form GUI_ContainerPhone
     */
    public DTO_SanPham sp = new DTO_SanPham();
    public BUS_SanPham spBus = new BUS_SanPham();
    public ArrayList<GUI_ContainerPhone> container = new ArrayList<>();

  
    
    public GUI_ContainerPhone(DTO_SanPham sp) {
        initComponents();
        this.sp = sp;
        this.loadHinhAnhSp(this.sp.getImg().toString(), jlbHinhAnh, 250,167);
        this.jlbTen.setText(this.sp.getTenSp());
    }
    
    public void loadHinhAnhSp(String scr,JLabel jlb,int width,int height){
       int desiredWidth = width; // Chiều rộng mong muốn
        int desiredHeight = height; // Chiều cao mong muốn

        try {
            // Kiểm tra xem đường dẫn không null
            if (scr != null) {
                // Đọc hình ảnh từ đường dẫn
                BufferedImage originalImage = ImageIO.read(getClass().getResource(scr));

                // Thay đổi kích thước hình ảnh
                Image resizedImage = originalImage.getScaledInstance(desiredWidth, desiredHeight, Image.SCALE_SMOOTH);

                // Tạo biểu tượng từ hình ảnh đã thay đổi kích thước
                ImageIcon imageIcon = new ImageIcon(resizedImage);

                // Đặt biểu tượng cho thành phần giao diện người dùng
                jlb.setIcon(imageIcon);
            } else {
                // Xử lý trường hợp đường dẫn là null hoặc không tồn tại
                // Có thể hiển thị một hình ảnh mặc định hoặc thông báo lỗi tùy ý
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
   
    public void visibleDialog(){
        GUI_ThongTinMuaSanPham guiThongTinSp = new GUI_ThongTinMuaSanPham(this, true, sp);
        guiThongTinSp.setVisible(true);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new RoundedPanel(100);
        jPanel2 = new javax.swing.JPanel();
        jlbHinhAnh = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jlbTen = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jlbHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbHinhAnh.setText("HÌNH ẢNH");
        jlbHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(17, 153, 142)));
        jlbHinhAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbHinhAnhMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel4.setBackground(new java.awt.Color(17, 153, 142));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 50));
        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        jlbTen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlbTen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbTen.setText("TÊN PHONE");
        jPanel4.add(jlbTen);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        jButton2.setText("MUA");
        jButton2.setPreferredSize(new java.awt.Dimension(240, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jPanel4.add(jPanel3);

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jlbHinhAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbHinhAnhMouseClicked
        // TODO add your handling code here:
        this.visibleDialog();
    }//GEN-LAST:event_jlbHinhAnhMouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        this.visibleDialog();      
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.visibleDialog();   
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jlbHinhAnh;
    private javax.swing.JLabel jlbTen;
    // End of variables declaration//GEN-END:variables
class RoundedPanel extends JPanel
    {
        private Color backgroundColor;
        private int cornerRadius = 15;
        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
            
        }
        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            //Draws the rounded panel with borders.
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint background
            graphics.setColor(getForeground());
//            graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); //paint border
//             
        }
    }
}
